from django import forms

class IllnessPredictorForm(forms.Form):
    SYMPTOMS = [
        ("pain_behind_the_eyes", "Pain behind the eyes"),
        ("receiving_blood_transfusion", "Receiving blood transfusion"),
        ("receiving_unsterile_injections", "Receiving unsterile injections"),
        ("polyuria", "Polyuria"),
        ("increased_appetite", "Increased appetite"),
        ("coma", "Coma"),
        ("stomach_bleeding", "Stomach bleeding"),
        ("loss_of_smell", "Loss of smell"),
        ("throat_irritation", "Throat irritation"),
        ("redness_of_eyes", "Redness of eyes"),
        ("sinus_pressure", "Sinus pressure"),
        ("palpitations", "Palpitations"),
        ("runny_nose", "Runny nose"),
        ("congestion", "Congestion"),
        ("slurred_speech", "Slurred speech"),
        ("brittle_nails", "Brittle nails"),
        ("swollen_extremeties", "Swollen extremities"),
        ("rusty_sputum", "Rusty sputum"),
        ("enlarged_thyroid", "Enlarged thyroid"),
        ("blood_in_sputum", "Blood in sputum"),
        ("abnormal_menstruation", "Abnormal menstruation"),
        ("irritability", "Irritability"),
        ("muscle_pain", "Muscle pain"),
        ("mild_fever", "Mild fever"),
        ("phlegm", "Phlegm"),
        ("muscle_weakness", "Muscle weakness"),
        ("depression", "Depression"),
        ("fast_heart_rate", "Fast heart rate"),
        ("malaise", "Malaise"),
        ("red_spots_over_body", "Red spots over body"),
        ("yellowing_of_eyes", "Yellowing of eyes"),
        ("swelled_lymph_nodes", "Swelled lymph nodes"),
        ("chest_pain", "Chest pain"),
        ("excessive_hunger", "Excessive hunger"),
        ("back_pain", "Back pain"),
        ("loss_of_appetite", "Loss of appetite"),
        ("mucoid_sputum", "Mucoid sputum"),
        ("prominent_veins_on_calf", "Prominent veins on calf"),
        ("hip_joint_pain", "Hip joint pain"),
        ("visual_disturbances", "Visual disturbances"),
        ("pain_during_bowel_movements", "Pain during bowel movements"),
        ("pain_in_anal_region", "Pain in anal region"),
        ("irritation_in_anus", "Irritation in anus"),
        ("knee_pain", "Knee pain"),
        ("cramps", "Cramps"),
        ("drying_and_tingling_lips", "Drying and tingling lips"),
        ("swollen_legs", "Swollen legs"),
        ("puffy_face_and_eyes", "Puffy face and eyes"),
        ("bloody_stool", "Bloody stool"),
        ("unsteadiness", "Unsteadiness"),
        ("movement_stiffness", "Movement stiffness"),
        ("passage_of_gases", "Passage of gases"),
        ("cold_hands_and_feets", "Cold hands and feet"),
        ("irregular_sugar_level", "Irregular sugar level"),
        ("anxiety", "Anxiety"),
        ("weight_gain", "Weight gain"),
        ("belly_pain", "Belly pain"),
        ("altered_sensorium", "Altered sensorium"),
        ("toxic_look_(typhos)", "Toxic look (typhos)"),
        ("internal_itching", "Internal itching"),
        ("continuous_feel_of_urine", "Continuous feel of urine"),
        ("bladder_discomfort", "Bladder discomfort"),
        ("acute_liver_failure", "Acute liver failure"),
        ("lack_of_concentration", "Lack of concentration"),
        ("bruising", "Bruising"),
        ("distention_of_abdomen", "Distention of abdomen"),
        ("fluid_overload_1", "Fluid overload"),
        ("inflammatory_nails", "Inflammatory nails"),
        ("history_of_alcohol_consumption", "History of alcohol consumption"),
        ("small_dents_in_nails", "Small dents in nails"),
        ("silver_like_dusting", "Silver-like dusting"),
        ("blister", "Blister"),
        ("yellow_crust_ooze", "Yellow crust ooze"),
        ("yellow_urine", "Yellow urine"),
        ("swelling_of_stomach", "Swelling of stomach"),
        ("mood_swings", "Mood swings"),
        ("neck_pain", "Neck pain"),
        ("constipation", "Constipation"),
        ("painful_walking", "Painful walking"),
        ("restlessness", "Restlessness"),
    ]

    for symptom, label in SYMPTOMS:
        locals()[symptom] = forms.BooleanField(
            required=False,
            initial=False,
            label=label,
            widget=forms.CheckboxInput()
        )
    
    def clean(self):
        cleaned_data = super().clean()
        selected_symptoms = sum(1 for symptom, label in self.SYMPTOMS if cleaned_data.get(symptom, False))
        if selected_symptoms < 3:
            raise forms.ValidationError('Please select at least 3 symptoms.')
        return cleaned_data
